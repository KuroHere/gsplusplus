/*
 * Decompiled with CFR 0.152.
 */
package com.gamesense.client.module.modules.exploits;

import com.gamesense.api.event.events.ChorusEvent;
import com.gamesense.api.event.events.PacketEvent;
import com.gamesense.api.event.events.RenderEvent;
import com.gamesense.api.setting.values.ColorSetting;
import com.gamesense.api.setting.values.IntegerSetting;
import com.gamesense.api.util.render.GSColor;
import com.gamesense.api.util.render.RenderUtil;
import com.gamesense.client.module.Category;
import com.gamesense.client.module.Module;
import java.util.ArrayList;
import java.util.function.Predicate;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketConfirmTeleport;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.server.SPacketPlayerPosLook;

@Module.Declaration(name="ChorusPost", category=Category.Exploits)
public class ChorusPost
extends Module {
    boolean startCancel = false;
    ArrayList<Packet<?>> packets = new ArrayList();
    ColorSetting colorChorus = this.registerColor("Color Chorus", new GSColor(255, 255, 255));
    IntegerSetting alpha = this.registerInteger("Alpha", 50, 0, 255);
    boolean isSendingPackets = false;
    int x;
    int y;
    int z;
    @EventHandler
    private final Listener<ChorusEvent> onUpdateWalkingPlayerEventListener = new Listener<ChorusEvent>(event -> {
        this.startCancel = true;
        this.x = (int)ChorusPost.mc.field_71439_g.field_70165_t;
        this.y = (int)ChorusPost.mc.field_71439_g.field_70163_u;
        this.z = (int)ChorusPost.mc.field_71439_g.field_70161_v;
    }, new Predicate[0]);
    @EventHandler
    private final Listener<PacketEvent.Send> packetSendListener = new Listener<PacketEvent.Send>(event -> {
        if (ChorusPost.mc.field_71441_e == null || ChorusPost.mc.field_71439_g == null || !this.startCancel || this.isSendingPackets) {
            return;
        }
        Packet pack = event.getPacket();
        if (pack instanceof SPacketPlayerPosLook) {
            SPacketPlayerPosLook pl = (SPacketPlayerPosLook)pack;
            if (this.x != (int)pl.field_148940_a || (double)this.y != pl.field_148938_b || (double)this.z != pl.field_148939_c) {
                ChorusPost.mc.field_71439_g.func_70107_b(pl.field_148940_a, pl.field_148938_b, pl.field_148939_c);
            }
            event.cancel();
        } else if (event.getPacket() instanceof CPacketPlayer) {
            this.packets.add(pack);
            event.cancel();
        } else if (event.getPacket() instanceof CPacketConfirmTeleport) {
            this.packets.add(pack);
            event.cancel();
        }
    }, new Predicate[0]);

    @Override
    public void onUpdate() {
        if (ChorusPost.mc.field_71441_e == null || ChorusPost.mc.field_71439_g == null) {
            this.packets.clear();
        } else if (ChorusPost.mc.field_71474_y.field_74311_E.func_151468_f()) {
            this.isSendingPackets = true;
            for (int i = 0; i < this.packets.size(); ++i) {
                ChorusPost.mc.field_71439_g.field_71174_a.func_147297_a(this.packets.get(i));
            }
            this.isSendingPackets = false;
            this.packets.clear();
            this.startCancel = false;
        }
    }

    @Override
    protected void onEnable() {
        this.isSendingPackets = false;
        this.startCancel = false;
    }

    @Override
    public void onWorldRender(RenderEvent event) {
        if (this.startCancel) {
            RenderUtil.drawBoundingBox(ChorusPost.mc.field_71439_g.func_174813_aQ(), 2.0, new GSColor(this.colorChorus.getColor().getRed(), this.colorChorus.getColor().getGreen(), this.colorChorus.getColor().getBlue(), (Integer)this.alpha.getValue()));
        }
    }
}

